#!/bin/bash
#
# Slackware backup solution
# Written by Mario Antunes (mariolpantunes@gmail.com)

PRGNAM="backup"
USER=${USER:-$(whoami)}
GROUP=${GROUP:-$(id -gn $USER)}
HOMEDIR=${HOMEDIR:-$(eval echo ~${USER})}
VERSION=${VERSION:-$(date +'%d-%m-%Y')}
BUILD=${BUILD:-"1"}
ARCH=${ARCH:-"noarch"}
TAG=${TAG:-"_SBo"}

CWD="$(pwd)"
TMP="${TMP:-/tmp/SBo}"
PKG="$TMP/package-$PRGNAM"
OUTPUT=${OUTPUT:-"/tmp"}

### Print initial config
echo -e "PRGNAM : $PRGNAM"
echo -e "USER   : $USER"
echo -e "GROUP  : $GROUP"
echo -e "HOMEDIR: $HOMEDIR"
echo -e "VERSION: $VERSION"

### Basic functions

function setUp()
{
    set -e
    rm -rf $PKG
    mkdir -p $PKG $OUTPUT
    cd $TMP
}

function createHomeDir()
{
    mkdir -p $PKG/$HOMEDIR
    chown $USER:$GROUP $PKG/$HOMEDIR/
}

function createPKG()
{
    mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-tgz}
}

### Backup Functions

function backup_SSH()
{
    echo -ne "BackUp SSH: "
    sudo -u $USER mkdir -p $PKG/$HOMEDIR/.ssh
    sudo -u $USER cp -p $HOMEDIR/.ssh/config $HOMEDIR/.ssh/id_* $PKG/$HOMEDIR/.ssh/
    echo -e "\e[00;32mdone.\e[00m"
}

function backup_VIM()
{
    echo -ne "BackUp VIM: "
    sudo -u $USER mkdir -p $PKG/$HOMEDIR/.vim/colors
    sudo -u $USER cp -p $HOMEDIR/.vim/colors/* $PKG/$HOMEDIR/.vim/colors
    sudo -u $USER cp -p $HOMEDIR/.vimrc $PKG/$HOMEDIR/
    echo -e "\e[00;32mdone.\e[00m"
}

function backup_BASH_RC()
{
    echo -ne "BackUp BASH_RC: "
    sudo -u $USER cp -p $HOMEDIR/.bashrc $PKG/$HOMEDIR
    echo -e "\e[00;32mdone.\e[00m"
}

function backup_NTP()
{
    echo -ne "BackUp NTP: "
    mkdir -p $PKG/etc/
    cp -p /etc/ntp.conf $PKG/etc/
    echo -e "\e[00;32mdone.\e[00m"
}

function backup_RC_LOCAL()
{
    echo -ne "BackUp RC_LOCAL: "
    mkdir -p $PKG/etc/rc.d/
    cp -p /etc/rc.d/rc.local* $PKG/etc/rc.d/
    echo -e "\e[00;32mdone.\e[00m"
}

setUp
createHomeDir

### Call several backup functions
backup_SSH
backup_NTP
backup_VIM
backup_BASH_RC
backup_RC_LOCAL

createPKG
